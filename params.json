{"name":"Digital Emulation of a Vacuum Tube Guitar Preamp","tagline":"Final Project for EECS 352 at Northwestern University","body":"### Introduction\r\nVacuum tube guitar amplifiers are niche musical products which generate millions of dollars in annual sales. Vacuum tubes are an otherwise obsolete technology that is still being used in guitar amplifiers today because many electric guitarists prefer the way they distort and respond to playing dynamics compared to transistor amplifiers. The main reason why tubes sound different when they distort is the way they clip the signal, soft clipping the signal waveform instead of abruptly hard clipping (see figure below). \r\n\r\n![figure1](https://raw.githubusercontent.com/ArthurMa/EECS352/master/figure1.jpg)\r\n\r\nDigital modeling amplifiers already exist, but to many electric guitarists, they often fall short of capturing the unique sound of an overdriven tube amplifier. Our goal was to create an algorithm ableto emulate the cascaded soft clipping present in guitar vacuum tube preamps, given a suitable electric guitar signal encoded in an audio format.\r\n\r\n### Overall Structure\r\nOur simulated guitar vacuum tube preamp has 3 individual tube gain stages in order to emulate the cascading gain stage designs of many modern guitar vacuum tube preamps. Using more than one clipping stage results in duty cycle modulation, which is a shifting of the average DC offset of the waveform based on the input signal strength. This generates mostly odd-order harmonics with some even-order harmonics which increase as input signal gain increases.\r\n\r\nThe Graphical User Interface (GUI) for our algorithm is based on those of VST plug-ins for Audacity as mentioned in the previous section. Each gain stage has an individual gain knob (see Figure 3), and there are treble, mid, and bass knobs in the EQ section to simulate the tone stack, which is the equivalent of a passive EQ section in a guitar amplifier. The simulated tone stacks are based off of those given by the stock values in the Duncan Tone Stack Calculator, downloadable at the following web page: http://www.duncanamps.com/tsc/\r\n\r\nThere are 3 different EQ voicings available, which shift the frequency responses of the filters in the EQ section. If the Fender voicing is chosen, the tone stack is moved in between stages 1 and 2, while if the Vox or Marshall voicings are chosen, the tone stack is moved to immediately after stage 3. There are also 8 presets that simulate the frequency responses of different types of speakers available from Jensen Loudspeakers, specifically: the Mod 6-15, the P8R, the C8R, the P10R, the C10R, the Blackbird 12, the P12N, and the C12N. At the very end of the signal chain, we scale the signal so that the maximum of the absolute value of the signal vector is 1, then multiply the signal by a value between 0 and 1 that is determined by where the output volume control is set in the GUI.\r\n\r\nOverall, the signal chain is ordered as such: Gain stage 1 => (Tone stack if Fender preset chosen) => Gain stage 2 => Gain stage 3 => (Tone stack if Vox or Marshall preset chosen) => Set of filters to emulate speaker => Output volume scaling.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}